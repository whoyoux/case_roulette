import { type NextPage } from "next";
import Head from "next/head";
import { GetStaticProps, InferGetStaticPropsType } from "next";
import superjson from "superjson";
import { appRouter } from "@/server/api/root";
import { createProxySSGHelpers } from "@trpc/react-query/ssg";
import { prisma } from "@/server/db";
import { Case } from "@prisma/client";
import FeaturedCases from "@/components/HomePage/FeaturedCases";

const Home: NextPage = (props: InferGetStaticPropsType<typeof getStaticProps>) => {
  const cases = props.cases! as Case[];
  return (
    <>
      <Head>
        <title>Case Roulette</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="mt-10">
        <div>
          <h1 className="mb-5 text-3xl font-bold">Our best cases</h1>
          <FeaturedCases cases={cases} />
        </div>
      </main>
    </>
  );
};


export const getStaticProps: GetStaticProps = async () => {
  const ssg = createProxySSGHelpers({
    router: appRouter,
    ctx: {
      session: null,
      prisma,
    },
    transformer: superjson,
  });

  const cases = await ssg.case.getFeaturedCases.fetch();

  return {
    props: {
      trpcState: ssg.dehydrate(),
      cases,
    },
    revalidate: 10,
  };
};


export default Home;
